package com.java.ejb;

import java.util.List;
import java.util.Random;

import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;

public class CustomerDAOImpl implements CustomerDAO {

	
	SessionFactory sf;
	Session session;
	
	public static int generateOtp() {
		Random r = new Random(System.currentTimeMillis());
		return ((1 + r.nextInt(2)) * 10000 + r.nextInt(10000));
	}
	
	@Override
	public String addCustomer(Customer customer) {
		sf = SessionHelper.getConnection();
		session = sf.openSession();
		Transaction trans = session.beginTransaction();
		customer.setStatus("PENDING");
		session.save(customer);
		trans.commit();
		
		int otp = generateOtp();
		String body = "Welcome to Mr/Miss  " + customer.getFirstName() + "\r\n" + "Your OTP Generated Successfully..."
				+ "\r\n" + "OTP is " + otp;
		MailSend.mailOtp(customer.getEmail(), "Otp Send Successfully...", body);
		
		sf = SessionHelper.getConnection();
		session = sf.openSession();
		Transaction trans2 = session.beginTransaction();
		CustomerAuthorization cust = new CustomerAuthorization();
		cust.setCustid(customer.getCustId());

		cust.setUserName(customer.getUserName());

		cust.setOtp(String.valueOf(otp));

		session.save(cust);

		session.getTransaction().commit();
		
		return "CustomerShow.jsp?faces-redirect=true";
	}

	@Override
	public List<Customer> showCustomer() {
		sf = SessionHelper.getConnection();
		session = sf.openSession();
		Criteria cr =session.createCriteria(Customer.class);
		return cr.list();
		
	}

}
